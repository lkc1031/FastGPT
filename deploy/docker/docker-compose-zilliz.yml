# 數據庫的默認賬號和密碼僅首次運行時設置有效
# 如果修改了賬號密碼，記得改數據庫和項目連接參數，別隻改一處~
# 該配置文件只是給快速啓動，測試使用。正式使用，記得務必修改賬號密碼，以及調整合適的知識庫參數，共享內存等。
# 如何無法訪問 dockerhub 和 git，可以用阿里雲（阿里雲沒有arm包）

version: '3.3'
services:
  mongo:
    image: mongo:5.0.18 # dockerhub
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/mongo:5.0.18 # 阿里雲
    # image: mongo:4.4.29 # cpu不支持AVX時候使用
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - fastgpt
    command: mongod --keyFile /data/mongodb.key --replSet rs0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myusername
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    volumes:
      - ./mongo/data:/data/db
    entrypoint:
      - bash
      - -c
      - |
        openssl rand -base64 128 > /data/mongodb.key
        chmod 400 /data/mongodb.key
        chown 999:999 /data/mongodb.key
        echo 'const isInited = rs.status().ok === 1
        if(!isInited){
          rs.initiate({
              _id: "rs0",
              members: [
                  { _id: 0, host: "mongo:27017" }
              ]
          })
        }' > /data/initReplicaSet.js
        # 啓動MongoDB服務
        exec docker-entrypoint.sh "$$@" &

        # 等待MongoDB服務啓動
        until mongo -u myusername -p mypassword --authenticationDatabase admin --eval "print('waited for connection')"; do
          echo "Waiting for MongoDB to start..."
          sleep 2
        done

        # 執行初始化副本集的腳本
        mongo -u myusername -p mypassword --authenticationDatabase admin /data/initReplicaSet.js

        # 等待docker-entrypoint.sh腳本執行的MongoDB服務進程
        wait $$!
  redis:
    image: redis:7.2-alpine
    container_name: redis
    # ports:
    # - 6379:6379
    networks:
      - fastgpt
    restart: always
    command: |
      redis-server --requirepass mypassword --loglevel warning --maxclients 10000 --appendonly yes --save 60 10 --maxmemory 4gb --maxmemory-policy noeviction
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'mypassword', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - ./redis/data:/data

  sandbox:
    container_name: sandbox
    image: ghcr.io/labring/fastgpt-sandbox:v4.9.11 # git
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-sandbox:v4.9.11 # 阿里雲
    networks:
      - fastgpt
    restart: always
  fastgpt-mcp-server:
    container_name: fastgpt-mcp-server
    image: ghcr.io/labring/fastgpt-mcp_server:v4.9.11 # git
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-mcp_server:v4.9.11 # 阿里雲
    ports:
      - 3005:3000
    networks:
      - fastgpt
    restart: always
    environment:
      - FASTGPT_ENDPOINT=http://fastgpt:3000
  fastgpt:
    container_name: fastgpt
    image: ghcr.io/labring/fastgpt:v4.9.11 # git
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:v4.9.11 # 阿里雲
    ports:
      - 3000:3000
    networks:
      - fastgpt
    depends_on:
      - mongo
      - sandbox
    restart: always
    environment:
      # 前端外部可訪問的地址，用於自動補全文件資源路徑。例如 https:fastgpt.cn，不能填 localhost。這個值可以不填，不填則發給模型的圖片會是一個相對路徑，而不是全路徑，模型可能僞造Host。
      - FE_DOMAIN=
      # root 密碼，用戶名爲: root。如果需要修改 root 密碼，直接修改這個環境變量，並重啓即可。
      - DEFAULT_ROOT_PSW=1234
      # AI Proxy 的地址，如果配了該地址，優先使用
      - AIPROXY_API_ENDPOINT=http://aiproxy:3000
      # AI Proxy 的 Admin Token，與 AI Proxy 中的環境變量 ADMIN_KEY
      - AIPROXY_API_TOKEN=aiproxy
      # 模型中轉地址（如果用了 AI Proxy，下面 2 個就不需要了，舊版 OneAPI 用戶，使用下面的變量）
      # - OPENAI_BASE_URL=http://oneapi:3000/v1
      # - CHAT_API_KEY=sk-fastgpt
      # 數據庫最大連接數
      - DB_MAX_LINK=30
      # 登錄憑證密鑰
      - TOKEN_KEY=any
      # root的密鑰，常用於升級時候的初始化請求
      - ROOT_KEY=root_key
      # 文件閱讀加密
      - FILE_TOKEN_KEY=filetoken
      # MongoDB 連接參數. 用戶名myusername,密碼mypassword。
      - MONGODB_URI=mongodb://myusername:mypassword@mongo:27017/fastgpt?authSource=admin
      # Redis 連接參數
      - REDIS_URI=redis://default:mypassword@redis:6379
      # zilliz 連接參數
      - MILVUS_ADDRESS=zilliz_cloud_address
      - MILVUS_TOKEN=zilliz_cloud_token
      # sandbox 地址
      - SANDBOX_URL=http://sandbox:3000
      # 日誌等級: debug, info, warn, error
      - LOG_LEVEL=info
      - STORE_LOG_LEVEL=warn
      # 工作流最大運行次數
      - WORKFLOW_MAX_RUN_TIMES=1000
      # 批量執行節點，最大輸入長度
      - WORKFLOW_MAX_LOOP_TIMES=100
      # 自定義跨域，不配置時，默認都允許跨域（多個域名通過逗號分割）
      - ALLOWED_ORIGINS=
      # 是否開啓IP限制，默認不開啓
      - USE_IP_LIMIT=false
      # 對話文件過期天數
      - CHAT_FILE_EXPIRE_TIME=7
    volumes:
      - ./config.json:/app/data/config.json

  # AI Proxy
  aiproxy:
    image: ghcr.io/labring/aiproxy:v0.1.7
    # image: registry.cn-hangzhou.aliyuncs.com/labring/aiproxy:v0.1.7 # 阿里雲
    container_name: aiproxy
    restart: unless-stopped
    depends_on:
      aiproxy_pg:
        condition: service_healthy
    networks:
      - fastgpt
    environment:
      # 對應 fastgpt 裏的AIPROXY_API_TOKEN
      - ADMIN_KEY=aiproxy
      # 錯誤日誌詳情保存時間（小時）
      - LOG_DETAIL_STORAGE_HOURS=1
      # 數據庫連接地址
      - SQL_DSN=postgres://postgres:aiproxy@aiproxy_pg:5432/aiproxy
      # 最大重試次數
      - RETRY_TIMES=3
      # 不需要計費
      - BILLING_ENABLED=false
      # 不需要嚴格檢測模型
      - DISABLE_MODEL_CONFIG=true
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/status']
      interval: 5s
      timeout: 5s
      retries: 10
  aiproxy_pg:
    image: pgvector/pgvector:0.8.0-pg15 # docker hub
    # image: registry.cn-hangzhou.aliyuncs.com/fastgpt/pgvector:v0.8.0-pg15 # 阿里雲
    restart: unless-stopped
    container_name: aiproxy_pg
    volumes:
      - ./aiproxy_pg:/var/lib/postgresql/data
    networks:
      - fastgpt
    environment:
      TZ: Asia/Shanghai
      POSTGRES_USER: postgres
      POSTGRES_DB: aiproxy
      POSTGRES_PASSWORD: aiproxy
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'aiproxy']
      interval: 5s
      timeout: 5s
      retries: 10
networks:
  fastgpt:
